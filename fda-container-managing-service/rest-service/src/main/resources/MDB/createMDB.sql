CREATE SEQUENCE seq_data;
CREATE TYPE gender AS ENUM ('F', 'M', 'T');
CREATE TYPE accesstype AS ENUM ('R', 'W');

CREATE TABLE DATA (
	ID INTEGER PRIMARY KEY DEFAULT nextval('seq_data'),
	PROVENANCE TEXT,
	FileEncoding TEXT,
	FileType VARCHAR(100),
	Version TEXT,
	Seperator TEXT
);

CREATE TABLE USERS (
	Tiss_ID INTEGER PRIMARY KEY,
	Oid INTEGER,
	First_name VARCHAR(50),
	Last_name VARCHAR(50),
	Gender gender,
	Preceding_titles VARCHAR(50),
	Postpositioned_title VARCHAR(50),
	Main_Email TEXT
);


CREATE TABLE DATABASES (
	DBID INTEGER PRIMARY KEY, -- (= DockerContainer ID)
	Title VARCHAR(50),
	ResourceType TEXT,
	Description TEXT,
	Engine VARCHAR(20),
	Publisher VARCHAR(50),
	Year DATE,
	Open BOOLEAN,
	Contact INTEGER REFERENCES USERS(Tiss_ID),
	Creator INTEGER REFERENCES USERS(Tiss_ID)
);

CREATE TABLE TABLES (
	tDBID INTEGER REFERENCES DATABASES(DBID),
	tName VARCHAR(50),
	NumCols INTEGER,
	NumRows INTEGER,
	Version TEXT,
	PRIMARY KEY(tDBID,tName)
);

CREATE TABLE COLUMNS (
	cDBID INTEGER NOT NULL,
	tName VARCHAR(50) NOT NULL,
	cName VARCHAR(50),
	Datatype VARCHAR(50),
	SIunit TEXT,
	MaxVal NUMERIC,
	MinVal NUMERIC ,
	FOREIGN KEY (cDBID,tName) REFERENCES TABLES(tDBID,tName),
	PRIMARY KEY(cDBID, tName, cName)
);

CREATE TABLE VIEW (
	vDBID INTEGER REFERENCES Databases(DBID),
	vName VARCHAR(50),
	Query TEXT,
	Public BOOLEAN ,
	NumCols INTEGER,
	NumRows INTEGER,
	PRIMARY KEY (vDBID,vName)
);

CREATE TABLE feed (
	fDBID INTEGER,
	fName VARCHAR(50),
	fUserId INTEGER REFERENCES USERS(Tiss_ID),
	fDataID INTEGER REFERENCES DATA(ID),
	FOREIGN KEY (fDBID,fName) REFERENCES TABLES(tDBID,tNAME),
	PRIMARY KEY (fDBID,fName,fUserId, fDataID)
);

CREATE TABLE update (
	uUserID INTEGER REFERENCES USERS(Tiss_ID),
	uDBID INTEGER REFERENCES Databases(DBID),
	PRIMARY KEY (uUserID,uDBID)
);

CREATE TABLE access (
	aUserID INTEGER REFERENCES USERS(Tiss_ID),
	aDBID INTEGER REFERENCES Databases(DBID),
	attime TIMESTAMP,
	download BOOLEAN,
	PRIMARY KEY (aUserID, aDBID)
);

CREATE TABLE have_access (
	hUserID INTEGER REFERENCES USERS(Tiss_ID),
	hDBID INTEGER REFERENCES Databases(DBID),
	hType accesstype,
	PRIMARY KEY (hUserID,hDBID)
);

CREATE TABLE owns (
	oUserID INTEGER REFERENCES USERS(Tiss_ID),
	oDBID INTEGER REFERENCES Databases(DBID),
	PRIMARY KEY (oUserID,oDBID)
);